/**
 * global.js
 * @name 后台系统全局js
 * @author hus lay
 * @since 2018/2
 * @version 1.0
 */ 
$(function(){
    var idList = [];//批量选择id所存的数组

    //异步请求csrf头
    $.ajaxSetup({
        headers: {'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')}
    });

    //全选事件
    batchSelect(idList,"#container #content #list-table .select-all","#container #content #list-table .select-single");

    // 侧边栏点击事件
    $('.navbar .sidebar .sidebar-wrapper .sidebar-nav .sidebar-title').bind('click', function(){
        let _this = $(this).parent();
        if(_this.hasClass('sidebar-active')){
            _this.removeClass('sidebar-active');
        }else{
            _this.siblings().removeClass('sidebar-active');
            _this.addClass('sidebar-active');
        }
    });

    //侧边栏收缩
    $('.navbar .sidebar .sidebar-wrapper .sidebar-fold').on('click',function(){
        let _this = $(this);
        if(_this.hasClass('topbar-sidebar-unfold')){
            _this.removeClass('topbar-sidebar-unfold').addClass('topbar-sidebar-fold');
            _this.parents('.sidebar').addClass('sidebar-mini');
            $('#container').css('left','50px');
        }else{
            _this.removeClass('topbar-sidebar-fold').addClass('topbar-sidebar-unfold');
            _this.parents('.sidebar').removeClass('sidebar-mini');
            $('#container').css('left','180px');
        }
    });

    //收缩tip
    $(".navbar .sidebar [data-tip='tooltip']").on('mouseover',function(){
        if(!$(this).parents('.sidebar').hasClass('sidebar-mini')){return;};
        let position = $(this).offset();
        let tip = $(this).find('.nav-title').text();
        $('.navbar .sidebar #tooltip').text(tip).css({'top':position.top+2});
        $('.navbar .sidebar').addClass('tool-tip');
    }).on('mouseout',function(){
        $('.navbar .sidebar').removeClass('tool-tip');
    });
    
    //快捷菜单隐藏
    $('.navbar .container .collapse .admin-info-list, .navbar .container .collapse .admin-theme').mouseover(function(){
        $(this).find('.popup').removeClass('hidden');
    }).mouseout(function(){
        $(this).find('.popup').addClass('hidden');
    });

    //图片放大
    $('img.lightbox').on('click',function(){
        img = $(this).attr('src');
        info = '<div class="text-center"><img src="'+img+'" style="max-width: 300px;min-width: 100px;"></div>';
        responseTip(3,info);
    });
    
    setInterval("getMessage()",30000);
    init_iCheck();
    init_date();
    egg();
});

//定义时间按钮事件
function init_date(){
    let nowDate = getFormatDate();
    //定义时间按钮事件
    let st = '#container .inner-content .middle-layer #startTime';
    let et = '#container .inner-content .middle-layer #endTime';
    laydate.render({elem: st, type: 'datetime', max : nowDate, done: function(value, date, endDate){
        laydate.render({elem: et, type: 'datetime', show: true, min : value, max : nowDate});
    }});
    laydate.render({elem: et, type: 'datetime', max : nowDate});
}


//自定义确认对话框，返回true或false,确认或取消操作
function myConfirmModal(alertInfo,callback){//参数，当前操作提示文本
    if(alertInfo == undefined || alertInfo == ""){
        alertInfo = "确认当前操作吗？";
    }
    $("#myConfirmModal .modal-body").html("<p class='text-danger'>"+alertInfo+"</p>");
    $("#myConfirmModal").modal('show');//对话框显现

    //确认对话框--确认操作
    $("#myConfirmModal .btn-confirm").one('click',function(){
        $("#myConfirmModal").modal('hide');//对话框显现
        callback();//调用回调函数
    });
}

/**
 * 响应提示弹出框
 * @errorCode:0 为正确提示，1为错误提示
 * @time 弹框显现时长 毫秒 
 * @callback 回调函数
 */
function responseTip(errorCode,text,time,callback){
    if(errorCode == 200){
        if(text == ""){
            text = "恭喜您，操作成功！";
        }
        $("#myModal .modal-body").html("<p class='text-success'>"+text+"</p>");
    }else if(errorCode == 500){
        if(text == ""){
            text = "操作异常！";
        }
        $("#myModal .modal-body").html("<p class='text-danger'>"+text+"</p>");
    }else{
    	$("#myModal .modal-body").html("<p class='text-danger'>"+text+"</p>");
    }
    $("#myModal").modal('show');
    if(!time){
        return;
    }
    //定时器，1.5秒后模态框自动关闭
    setTimeout(function(){
        $("#myModal").modal('hide');
        if(callback){//如果传了回调函数，则调用
            callback();
        }
    },time);
}

//此事件在模态框被隐藏（并且同时在 CSS 过渡效果完成）之后被触发。
$('#myConfirmModal').on('hidden.bs.modal', function (e) {
    $("#myConfirmModal .btn-confirm").off("click");
})

//提交用户表单时的校验规则 
function formValidation(arr, $form, options) {
    // 如果JQuery.Validate检测不通过则返回false
    if(!$form.valid()){
        return false;
    }
    for(var i=0;i<arr.length;i++){
        //去除前后空格
        if(arr[i].type !='file'){
            arr[i].value=$.trim(arr[i].value);
        }
    }
}

//提交表单时的配置
var formOptions = {
    beforeSubmit : formValidation,
    type : 'post',
    dataType : 'json',
    clearForm : false, // clear all form fields after successful submit
    resetForm : false,
    beforeSend:function(xhr){
        $("#loading").modal('show');
    },
    complete:function(){
        $("#loading").modal('hide');
    }
};

/**
 * 提交系统配置信息的表单配置
 */
var options={
    success:successResponse,
    beforeSend:function(xhr){
        $("#loading").modal('show');
    },
    complete:function(){
        $("#loading").modal('hide');
    },
    error:errorResponse
};

//添加息得到服务器响应的回调方法
function successResponse(json,statusText){
    responseTip(json.code, josn.info);
}

//请求添加失败时（如网络不通畅、超时等）的回调方法
function errorResponse(XMLHttpRequest,textStatus,errorThrown){
    responseTip(json.code, '网络异常，请求失败！');
}

// 清除缓存
function clean_cache(){
    $.ajax({
            type:"post",
            url:"/admin/clean_cache",
            dataType:"json",
            success:function(json,statusText){
                if(json.code == 200){
                    //清除成功,跳转页面
                    window.location.reload();
                }else if(json.code == 500){
                    //清除失败
                    responseTip(500, '网络异常，请求失败！');
                }
                return false;
            },
            error:function(){
                alert('很抱歉，操作失败,发生异常！');
                return false;
            }
        });
    return false;
}

/**
 * 单选框样式初始化
 */
function init_iCheck(){
    //初始化复选框、单选按钮皮肤样式   //复选框添加类‘my-icheckbox’，单选按钮添加类‘my-iradio’
    $("input.icheckbox,input.iradio").iCheck({
        checkboxClass:"icheckbox_minimal-blue",//颜色主题需要与引入的css保持一致
        radioClass:"iradio_minimal-blue",//颜色主题需要与引入的css保持一致
        cursor:true
    });
}

/**
 * 表格批量选择事件 
 * @param idList 存储所有分页中选中的记录主键id的数组
 * @param selectAllSelector 全选选择器jquery对象
 * @param selectSingleSelector 全选选择器jquery对象
 */
function batchSelect(idList,allSelector,singleSelector){
    selectAll(idList,allSelector,singleSelector);
    selectSingle(idList,allSelector,singleSelector);
}

/**
 * 全选事件
 * @param idList 存储所有分页中选中的记录主键id的数组
 * @param allSelector 全选选择器jquery对象
 * @param singleSelector 单选选择器
 */
function selectAll(idList,allSelector,singleSelector){
    $(allSelector).on("ifChanged",function(){
        var boxs = $(singleSelector);//所有记录
        //被选中
        if($(this).prop("checked")){
            boxs.prop("checked",true);//复选框全部选中
            boxs.parent().addClass("checked");//加my-icheckbox类的时候专用
            boxs.each(function(){
                if($.inArray($(this).val(),idList) < 0){//idList中不包含当前id值，则加入
                    idList.push($(this).val());
                }
            });
        }else{
            //全部取消
            boxs.prop("checked",false);//复选框全部取消选中
            boxs.parent().removeClass("checked");//加my-icheckbox类的时候专用
            //从idList数组中删除当前id
            boxs.each(function(){
                var index = $.inArray($(this).val(),idList);
                if(index >= 0){//idList中包含当前id值，则删除
                    idList.splice(index,1);
                }
            });
        }
    });
}

/**
 * 单选事件
 * @param idList 存储所有分页中选中的记录主键
 * @param allSelector 全选选择器
 * @param itemSelector 单选选择器
 */
function selectSingle(idList,allSelector,itemSelector){
    $(itemSelector).on("ifChanged",function(){
        if($(this).prop("checked")){//单选复选框选中时
            if($(itemSelector).length == $(itemSelector+":checked").length){
                //所有复选框都选中时，将全选复选框置为选中状态
                $(allSelector).prop("checked",true);
                $(allSelector).parent().addClass("checked");//加my-icheckbox类的时候专用
            }
            if($.inArray($(this).val(),idList) < 0){//idList中不包含当前id值，则加入
                idList.push($(this).val());
            }
        }else{//单选复选框取消选中时
            $(allSelector).prop("checked",false);
            $(allSelector).parent().removeClass("checked");
            //从idList数组中删除当前id
            var index = $.inArray($(this).val(),idList);
            if(index >= 0){//idList中包含当前id值，则删除
                idList.splice(index,1);
            }
        }
    });
}
    
//侧边栏选中

//点击排序触发事件
function selecteSort(selectInfo, callback){
    //排序事件
    $("#container .inner-content .middle-layer .selectsort").on('click', function(){
        let _this = $(this);
        let status = ('asc' == _this.attr('type')) ? true : false ;
        let type,title,icon = '';
        if(true == status){
            type = 'desc';
            title = '降序';
            icon = '&#xe6d1;';
        }else{
            type = 'asc';
            title = '升序';
            icon = '&#xe6d0;';
        }
        _this.attr({'type':type,'title':title}).find('i').html(icon);
        selectInfo.sort = type;
        callback(1);
    });
}

/**
 * 利用bootpag插件完成 初始化配置
 * 分页查询方法
 * @param selector 分页页码所在选择器内
 * @param option 插件自定义配置选择
 * @param callback 翻页事件回调函数
 */
var pageOption = {
    firstLastUse: true,
	first: '«',
	last: '»',
	prev:'‹',
	next:'›',
    leaps:true,
    //wrapClass: 'pagination',
    //activeClass: 'active',
    //disabledClass: 'disabled',
    //nextClass: 'next',
    //prevClass: 'prev',
    //lastClass: 'last',
    //firstClass: 'first'
    total:1,//总页数
    total_count:0,//总记录数
    page:1, //当前显示页
    pageSize:10, //每页显示的记录数
    maxVisible:10//每页最多显示的页码链接
};

//分页触发事件
function pagination(selector,option,callback){
    $.extend(true,pageOption,option);
    $(selector).bootpag(pageOption).on("page", function(event, pageIndex){
        //动态加载渲染数据
        callback(pageIndex);
    });
}

//datetime
function getFormatDate(){    
    var nowDate = new Date();     
    var year = nowDate.getFullYear();    
    var month = nowDate.getMonth() + 1 < 10 ? "0" + (nowDate.getMonth() + 1) : nowDate.getMonth() + 1;    
    var date = nowDate.getDate() < 10 ? "0" + nowDate.getDate() : nowDate.getDate();    
    var hour = nowDate.getHours()< 10 ? "0" + nowDate.getHours() : nowDate.getHours();    
    var minute = nowDate.getMinutes()< 10 ? "0" + nowDate.getMinutes() : nowDate.getMinutes();    
    var second = nowDate.getSeconds()< 10 ? "0" + nowDate.getSeconds() : nowDate.getSeconds();    
    return year + "-" + month + "-" + date+" "+hour+":"+minute+":"+second;    
}  

//消息轮询
function getMessage(){
    $.ajax({
        type : "post",
        url : "/admin/getMessage",
        dataType : 'json'
    }).then(function(json){
        console.log(json);
    },function(e){
        if('Unauthorized' == e.responseText){
            responseTip(500, '登录超时！',5000,function(){
                location.href="/login";
            });return;
        }
    });
}

//egg
function egg(){
    var info = `
          _____                    _____                   _______                   _____          
         /\\    \\                  /\\    \\                 /::\\    \\                 /\\    \\         
        /::\\____\\                /::\\    \\               /::::\\    \\               /::\\____\\        
       /:::/    /               /::::\\    \\             /::::::\\    \\             /:::/    /        
      /:::/    /               /::::::\\    \\           /::::::::\\    \\           /:::/    /         
     /:::/    /               /:::/\\:::\\    \\         /:::/~~\\:::\\    \\         /:::/    /          
    /:::/____/               /:::/__\\:::\\    \\       /:::/    \\:::\\    \\       /:::/____/           
   /::::\\    \\              /::::\\   \\:::\\    \\     /:::/    / \\:::\\    \\     /::::\\    \\           
  /::::::\\    \\   _____    /::::::\\   \\:::\\    \\   /:::/____/   \\:::\\____\\   /::::::\\    \\   _____  
 /:::/\\:::\\    \\ /\\    \\  /:::/\\:::\\   \\:::\\    \\ |:::|    |     |:::|    | /:::/\\:::\\    \\ /\\    \\ 
/:::/  \\:::\\    /::\\____\\/:::/  \\:::\\   \\:::\\____\\|:::|____|     |:::|____|/:::/  \\:::\\    /::\\____\\
\\::/    \\:::\\  /:::/    /\\::/    \\:::\\  /:::/    / \\:::\\   _\\___/:::/    / \\::/    \\:::\\  /:::/    /
 \\/____/ \\:::\\/:::/    /  \\/____/ \\:::\\/:::/    /   \\:::\\ |::| /:::/    /   \\/____/ \\:::\\/:::/    / 
          \\::::::/    /            \\::::::/    /     \\:::\\|::|/:::/    /             \\::::::/    /  
           \\::::/    /              \\::::/    /       \\::::::::::/    /               \\::::/    /   
           /:::/    /               /:::/    /         \\::::::::/    /                /:::/    /    
          /:::/    /               /:::/    /           \\::::::/    /                /:::/    /     
         /:::/    /               /:::/    /             \\::::/____/                /:::/    /      
        /:::/    /               /:::/    /               |::|    |                /:::/    /       
        \\::/    /                \\::/    /                |::|____|                \\::/    /        
         \\/____/                  \\/____/                  ~~                       \\/____/         
                                                                                                    
    `;
    console.log(info);
    console.log('华安期货(http://haqh.com) 软件工程部');
}