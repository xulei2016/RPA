<?php

namespace App\Http\Controllers\admin\rpa;

use Illuminate\Http\Request;
use App\Http\Controllers\Base\BaseController;
use App\Repositories\Models\Admin\Base\AdminRepository as Admin;
use App\Repositories\Models\Admin\Rpa\TimeTasksRepository as TimeTasks;
use App\Repositories\Models\Admin\Rpa\ImmedTasksRepository as ImmedTasks;
use App\Repositories\Models\Admin\Rpa\MaintenanceRepository as Maintenance;
use App\Repositories\Models\Admin\Rpa\TaskcollectionsRepository as Taskcollections;
use App\Repositories\Models\Admin\Rpa\TasksRepositoryRepository as TasksRepository;

/**
 * rpa manage center
 * @author hsu lay
 * @since 2018/5/15
 * @link www.haqh.com
 */
class RpaController extends BaseController
{
    private $model;
    private $app;
    private $task;
    private $queue;
    private $admin;
    private $taskcollections;

    //__CONSTRUCT
    public function __CONSTRUCT(Maintenance $model, ImmedTasks $app, TasksRepository $Task, TimeTasks $queue, Admin $admin, Taskcollections $Taskcollections)
    {
        parent::__construct();
        $this->model = $model;
        $this->task = $Task;
        $this->queue = $queue;
        $this->app = $app;
        $this->admin = $admin;
        $this->taskcollections = $Taskcollections;
    }

    //RPA list
    public function index(Request $request){
        $this->log(__CLASS__, __FUNCTION__, $request, "查看 rpa 任务中心");
        return view('admin/rpa/Center/index');
    }

    //task list
    public function taskList(Request $request){
        $this->log(__CLASS__, __FUNCTION__, $request, "查看 发布任务 总览");
        return view('admin/rpa/Center/taskList');
    }

    //RPA add
    public function add(Request $request){
        $this->log(__CLASS__, __FUNCTION__, $request, "添加 rpa 任务");
        //通知角色
        $condition = [['type','=','1']];
        $admin = $this->admin->findAllBy($condition);
        return view('admin/rpa/Center/add',['admins'=>$admin['data']]);
    }

    //RPA edit
    public function edit(Request $request){
        $id = $request->id;
        $info = $this->model->find($id);
        $info['data']['messageSet'] = $info['data']['messageSet'] ? json_decode($info['data']['messageSet']) : [] ;
        $condition = [['type','=','1']];
        $admin = $this->admin->findAllBy($condition);
        $this->log(__CLASS__, __FUNCTION__, $request, "修改 rpa 任务");
        return view('admin/rpa/Center/edit',['info'=>$info['data'],'admins'=>$admin['data']]);
    }

    //RPA insert
    public function insert(Request $request){
        $data = $this->get_params($request, ['name','bewrite','filepath','failtimes','timeout','isfp','emailreceiver','PhoneNum','messageSet']);
        isset($data['messageSet']) ? $data['messageSet'] = json_encode($data['messageSet']) : '';
        $this->log(__CLASS__, __FUNCTION__, $request, "插入 rpa 信息");
        return $this->model->create($data);
    }

    //RPA update
    public function update(Request $request){
        $data = $this->get_params($request, ['id','name','bewrite','filepath','failtimes','timeout','isfp','emailreceiver','PhoneNum','messageSet']);
        isset($data['messageSet']) ? $data['messageSet'] = json_encode($data['messageSet']) : '';
        $this->log(__CLASS__, __FUNCTION__, $request, "更新 rpa 信息");
        return $this->model->update($data,$data['id']);
    }

    //delete RPA
    public function delete(Request $request){
        $id = $request->id;
        $this->log(__CLASS__, __FUNCTION__, $request, "删除 rpa");
        return $this->model->delete($id);
    }
    
    //delete_all
    public function deleteAll(Request $request){
        $ids = $request->ids;
        $this->log(__CLASS__, __FUNCTION__, $request, "批量删除 rpa 列表");
        return $this->model->delete(explode(',',$ids));
    }

    //pagenation
    public function pagination(Request $request){
        $condition = [];
        $sort = ['id','asc'];
        return $this->model->paginate($condition, $sort, 10);
    }

    //pagenation
    public function taskPagination(Request $request){
        $condition = [];
        $sort = ['id','asc'];
        return $this->task->paginate($condition, $sort, 10);
    }

    //立即发布任务
    public function immedtasks(Request $request){
        $id = $request->id;
        $task = $this->task->find($id);
        $task = $task['data']->toArray();
        $data = ['name'=>$task['name'],'jsondata'=>$task['jsondata'],'tid'=>$task['id']];
        $this->log(__CLASS__, __FUNCTION__, $request, "立即发布 {$task['name']}-{$task['id']} 任务");
        return $this->app->create($data);
    }

    //rpa消息订阅
    public function messageSubscribe(Request $request){
        $id = $request->id;
        $table = ['table'=>'rpa_maintenances as a','left'=>'a.name','mode'=>'=','right'=>'rpa_taskcollections.name'];
        $condition = [['rpa_taskcollections.id','=',$id]];
        $columns = ['rpa_taskcollections.*','a.messageSet','a.bewrite as task_name'];
        $message = $this->taskcollections
                    ->leftJoin($table)
                    ->where($condition)
                    ->get($columns);

        //是否预设消息推送人
        if($message){
            if(!empty($message['messageSet'])){
                $content = ($message['state'] == '成功') ? "<p>RPA服务-{$message['task_name']}: {$message['content']}" : "<p>RPA服务-{$message['task_name']}-运行<b class='text-danger'>失败</b>了！！！<br/>{$message['updatetime']}</p>" ;
                $data = [
                    //消息内容 || 执行结果
                    'title' => 'RPA-'.$message['task_name'].'任务运行--'.$message['state'],
                    'content' => $content,
                    'type' => 2,
                    'mode' => 1,
                    'user' => $message['messageSet'],
                    'add_time' => $this->get_time()
                ];
                $res = $this->message->insert($data);
                if($res['code'] == 200){
                    $this->log(__CLASS__, __FUNCTION__, $request, "rpa订阅消息 成功");
                    $mid = $res['data']['id'];
                    if($data['mode'] == 1){//个人推送
                        $info = [];
                        foreach($request->user as $admin){
                            array_push($info, ['mid'=>$mid, 'uid'=>$admin]);
                        }
                        return $this->usermodel->insert($info);
                    }
                }
            }
        }
    }

    //////////////////////////////////////////////////////////////queue//////////////////////////////////////////////////////

    //queue list
    public function queue(Request $request){
        $this->log(__CLASS__, __FUNCTION__, $request, "查看 任务队列");
        return view('admin/rpa/Center/queue');
    }

    //RPA edit
    public function editQueue(Request $request){
        $id = $request->id;
        $info = $this->queue->find($id);
        $info = $info['data'];
        $info['data'] = json_decode($info['jsondata'],true);
        $this->log(__CLASS__, __FUNCTION__, $request, "修改 队列 页面");
        return view('admin/rpa/Center/editQueue',['info'=>$info]);
    }

    //delete RPA
    public function deleteQueue(Request $request){
        $id = $request->id;
        $this->log(__CLASS__, __FUNCTION__, $request, "删除 队列");
        return $this->queue->delete($id);
    }

    //RPA update
    public function updateQueue(Request $request){
        $data = $this->get_params($request, ['id','name','state','time','jsondata','tid']);
        $this->log(__CLASS__, __FUNCTION__, $request, "更新 队列 信息");
        return $this->queue->update($data,$data['id']);
    }
    
    //delete_all
    public function deleteQueueAll(Request $request){
        $ids = $request->ids;
        $this->log(__CLASS__, __FUNCTION__, $request, "批量删除 队列");
        return $this->queue->delete(explode(',',$ids));
    }

    //pagenation
    public function queuePagination(Request $request){
        $condition = [];
        $sort = ['id','asc'];
        return $this->queue->paginate($condition, $sort, 10);
    }


}
